= Courier

Давным давно, в одной далекой-предалекой галактике, был такой модем USR Courier,
он хорошо держал карриер и был мечтой каждого фидошника. А сейчас чтобы получать
много не нужных писем достаточно зарегистрироваться на еще одной социальной
сети.

Чтобы помочь социальной сети справиться с большим количеством видов подписок и
оповещений, а пользователю настроить способы их доставки мы разработали плагин
Courier. Courier On Rails.

Courier - Универсальная система контроля пользовательских оповещений и подписок.

== Интерфейс

В модели пользователя:

   has_courier

В config/initializers/courier.rb регистрируем используемые сервисы и шаблоны:

   Courier.register_services(Courier::Service::ActiveMailer, Courier::Service::GritterNotices)
   Courier.register_templates(:import_complete, :avatar_loaded)

Посылаем пользователю сообщение по шаблону во все разрешенные сервисы

   user.message :import_complete, {:some=>'arguments in hash'}

Если сервис отправляет сообщение в реальном времени, то он его уже
отправил, а если сообщения собираются для дальнейшей отправки, то
осуществляется эта доставка так:

   Courier.deliver_all!

== Сервисы

На данный момент реализованы сервисы:

* Courier::Service::GritterNotices - отправка сообщений через gritter_notices[http://github.com/dapi/gritter_notices]
* Courier::Service::ActionMailer   - TODO
* Courier::Service::MailChimp      - TODO
* Courier::Service::Facebook       - TODO

== Contributing to courier

* Да, контрибьютьте на здоровье.

== Copyright

Copyright (c) 2011 Danil Pismenny. See LICENSE.txt for
further details.

